(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{234:function(e,n,t){"use strict";t.r(n);var a=t(0),s=Object(a.a)({},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),t("p",[e._v("Android Studio Settings:")]),e._v(" "),t("p",[e._v("targetSdkVersion Version choose 21")]),e._v(" "),t("p",[e._v("Place the minewBeaconScan.jar into the libs folder, and then in the current project under the build.gradle file configuration items in the dependencies new content, as follows compile files ('libs / minewBeaconScan.jar').")]),e._v(" "),t("p",[e._v("Eclipse Settings:")]),e._v(" "),t("p",[e._v("targetSdkVersion Version choose 21")]),e._v(" "),t("p",[e._v("Place the scanBeacon.jar into  the libs folder, right-click the project propeties, select Java build Path, add the minewBeaconScan.jar dependency in the Library option.")]),e._v(" "),t("p",[e._v("When the targetSdkVersion version is greater than or equal to 23, the need for dynamic application permissions.")]),e._v(" "),e._m(2),t("p",[e._v("Permissions required for SDK:")]),e._v(" "),t("p",[e._v("​     "),t("uses-permission",{attrs:{"android:name":"android.permission.BLUETOOTH"}}),e._v(" "),t("uses-permission",{attrs:{"android:name":"android.permission.BLUETOOTH_ADMIN"}}),e._v("\nThe corresponding component registration under the AndroidManifest.xml file. As follows:\n"),t("service",{attrs:{"android:name":"com.minew.beaconset.ConnectService"}}),e._v(" "),t("receiver",{attrs:{"android:name":"com.minew.beaconset.BluetoothChangedReceiver"}},[t("intent-filter",[t("action",{attrs:{"android:name":"android.bluetooth.adapter.action.STATE_CHANGED"}})],1)],1),e._v("\nAndroidStudio build.gradle add rely:\ndependencies {\ndependencies {\ntestCompile 'junit:junit:4.12'\ncompile 'com.android.support:appcompat-v7:23.3.0'\ncompile 'com.android.support:recyclerview-v7:23.3.0'\ncompile 'org.greenrobot:eventbus:3.0.0'\ncompile 'com.google.code.gson:gson:2.2.4'\ncompile files('libs/minewBeaconAdmin.jar')\n}\nYou can use this SDK to configure the surrounding Beacon for parameters such as uuid, major, minor, and so on. The SDK use four classes to achieve this part of the function.")],1),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),t("p",[e._v("Scan devices manager class.")]),e._v(" "),t("p",[e._v("Features:")]),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),t("p",[e._v("Scanned device model")]),e._v(" "),t("p",[e._v("All of these properties are read-only, and the underlying will periodically update the latest data for each device if it does not leave the scan range.")]),e._v(" "),t("p",[e._v("Features:")]),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),t("p",[e._v("The connection state between the device and the phone, and the protect class for the data update")]),e._v(" "),t("p",[e._v("Each instance corresponds to an instance of MinewBeacon and MinewBeaconSetting (connection state).")]),e._v(" "),t("p",[e._v("Features:")]),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),t("p",[e._v("Connected model")]),e._v(" "),t("p",[e._v("This class can only be connected in the Connection instance and the connection is successful after the acquisition, some attributes can be modified, modified after a temporary cache, only through the Connection instance successfully updated to the device changes will take effect.")]),e._v(" "),t("p",[e._v("Features:")]),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),t("p",[e._v("The MinewbeaconManager can start scan, and the SDK generates a MinewBeacon instance for the scanned device;")]),e._v(" "),e._m(14),e._m(15),e._v(" "),t("p",[e._v("If you want to connect to the device, you need to use the  MinewBeacon instance to generate a MinewBeaconConnection instance, through Connection to manage the connection / disconnect / update data.")]),e._v(" "),e._m(16),e._m(17),e._v(" "),t("p",[e._v("When the state of the connection is connected, you can modify all the non-read attributes whose attributes are set. You can update to the Beacon device by simply executing method. You can know if the update has been successfully by callback method.")]),e._v(" "),e._m(18),t("p",[e._v("More details ,refer to demo code.")])])},[function(){var e=this.$createElement,n=this._self._c||e;return n("h1",{attrs:{id:"minewbeaconadmin-android-software-development-kit-guide"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#minewbeaconadmin-android-software-development-kit-guide","aria-hidden":"true"}},[this._v("#")]),this._v(" MinewBeaconAdmin Android Software Development Kit Guide")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h1",{attrs:{id:"new-project"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#new-project","aria-hidden":"true"}},[this._v("#")]),this._v(" New Project")])},function(){var e=this.$createElement,n=this._self._c||e;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('<uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>\n<uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>\n')])]),this._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[this._v("1")]),n("br"),n("span",{staticClass:"line-number"},[this._v("2")]),n("br")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"class-description"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#class-description","aria-hidden":"true"}},[this._v("#")]),this._v(" Class Description")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h3",{attrs:{id:"minewbeaconmanager"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#minewbeaconmanager","aria-hidden":"true"}},[this._v("#")]),this._v(" MinewBeaconManager")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ol",[t("li",[e._v("start scan /stop scan")]),e._v(" "),t("li",[e._v("get in range devices/get all devices around")]),e._v(" "),t("li",[e._v("get bluetooth state")]),e._v(" "),t("li",[e._v("listen device in/out state")]),e._v(" "),t("li",[e._v("update scanned devices")]),e._v(" "),t("li",[e._v("listen bluetooth state change")]),e._v(" "),t("li",[e._v("on/off ConnectService")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h3",{attrs:{id:"minewbeacon"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#minewbeacon","aria-hidden":"true"}},[this._v("#")]),this._v(" MinewBeacon")])},function(){var e=this.$createElement,n=this._self._c||e;return n("ol",[n("li",[this._v("Export device data to JSON string;")]),this._v(" "),n("li",[this._v("Support import JSON string;")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h3",{attrs:{id:"minewbeaconconnection"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#minewbeaconconnection","aria-hidden":"true"}},[this._v("#")]),this._v(" MinewBeaconConnection")])},function(){var e=this.$createElement,n=this._self._c||e;return n("ol",[n("li",[this._v("Connect to a device / disconnect a device")]),this._v(" "),n("li",[this._v('Update the property "MinewBeaconSetting" to the device (callback method returns whether the update was successful)')])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h3",{attrs:{id:"minewbeaconsetting"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#minewbeaconsetting","aria-hidden":"true"}},[this._v("#")]),this._v(" MinewBeaconSetting")])},function(){var e=this.$createElement,n=this._self._c||e;return n("ol",[n("li",[this._v("Export device data to JSON string;")]),this._v(" "),n("li",[this._v("Support import JSON string;")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h2",{attrs:{id:"instructions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#instructions","aria-hidden":"true"}},[this._v("#")]),this._v(" Instructions")])},function(){var e=this.$createElement,n=this._self._c||e;return n("h4",{attrs:{id:"scan-devices"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#scan-devices","aria-hidden":"true"}},[this._v("#")]),this._v(" Scan devices")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"language-android line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("\n// 1.get MinewBeaconManager instance\nMinewBeaconManager mMinewBeaconManager = MinewBeaconManager.getInstance(this);\n//set callback\nmMinewBeaconManager.setMinewbeaconManagerListener(new MinewBeaconManagerListener() {});\n\n//2.start ConnectService\nmMinewBeaconManager.startService();\n\n// 3.start scan\nmMinewBeaconManager.startScan();\n\n// 4.Get the scan data update by callback method\n// This method is used to retrieve the latest scan data for the surrounding device\n- void onRangeBeacons(List<MinewBeacon> beacons);\n\n/* If you want to listen the device out of the state, you can achieve the following methods */\n\n// listen disappeared devices\n- void onDisappearBeacons(List<MinewBeacon> beacons);\n\n// listen new devices\n- void onAppearBeacons(List<MinewBeacon> beacons);\n\n/* listen bluetooth change */\n// bluetooth state：on，off，none\n// only work on bluetooth state on.\n- void onUpdateBluetoothState(BluetoothState state);\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br"),t("span",{staticClass:"line-number"},[e._v("21")]),t("br"),t("span",{staticClass:"line-number"},[e._v("22")]),t("br"),t("span",{staticClass:"line-number"},[e._v("23")]),t("br"),t("span",{staticClass:"line-number"},[e._v("24")]),t("br"),t("span",{staticClass:"line-number"},[e._v("25")]),t("br"),t("span",{staticClass:"line-number"},[e._v("26")]),t("br"),t("span",{staticClass:"line-number"},[e._v("27")]),t("br"),t("span",{staticClass:"line-number"},[e._v("28")]),t("br")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h4",{attrs:{id:"connection"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#connection","aria-hidden":"true"}},[this._v("#")]),this._v(" Connection")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"language-android line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// 1. Use a MinewBeacon instance to generate a Connection instance and set a callback monitor\nMinewBeaconConnection minewBeaconConnection = new MinewBeaconConnection(context, minewBeacon);\nminewBeaconConnection.setMinewBeaconConnectionListener(minewBeaconConnectionListener);\n               \n// 2. connect to device\n minewBeaconConnection.connect();\n\n// 3.connection state\n- void onChangeState(MinewBeaconConnection connection, ConnectionState state);\n{\n  //  When the connection is successful, the MinewBeaconSetting property of the connection instance is no longer empty, and the MinewBeaconSetting instance is the data obtained from the device\n  switch (state) {\n                case BeaconStatus_Connected:\n                   minewBeaconConnection.setting.getMajor();\n                    break;\n                case BeaconStatus_ConnectFailed:\n                case BeaconStatus_Disconnect:\n                    break;\n            }\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br"),t("span",{staticClass:"line-number"},[e._v("19")]),t("br"),t("span",{staticClass:"line-number"},[e._v("20")]),t("br")])])},function(){var e=this.$createElement,n=this._self._c||e;return n("h3",{attrs:{id:"settings"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#settings","aria-hidden":"true"}},[this._v("#")]),this._v(" Settings")])},function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"language-android line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('// 1.modify the setting attribute of connection\nMinewbeaconSetting mMinewBeaconSetting = minewBeaconConnection.setting;\nmMinewBeaconSetting.setUuid("FDA50693A4E24FB1AFCFC6EB07647825");\n\n/*.....*/\n\n// 2.Update changes to the device\n// It should be noted that the parameters here are the current restart password for the Beacon device;\nmMinewBeaconConnection.writeSetting("minew123");\n\n// 3.Use the callback method to get a successful update to the device\n- void onWriteSettings(MinewBeaconConnection connection, final boolean success) {\n   if (success) {\n               Toast.makeText(getApplicationContext(), "Success", Toast.LENGTH_SHORT).show();\n           } else {\n              Toast.makeText(getApplicationContext(), "Failed", Toast.LENGTH_SHORT).show();\n                }\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br"),t("span",{staticClass:"line-number"},[e._v("12")]),t("br"),t("span",{staticClass:"line-number"},[e._v("13")]),t("br"),t("span",{staticClass:"line-number"},[e._v("14")]),t("br"),t("span",{staticClass:"line-number"},[e._v("15")]),t("br"),t("span",{staticClass:"line-number"},[e._v("16")]),t("br"),t("span",{staticClass:"line-number"},[e._v("17")]),t("br"),t("span",{staticClass:"line-number"},[e._v("18")]),t("br")])])}],!1,null,null,null);s.options.__file="Android_BeaconAdmin_Software_Development_Kit_Guide.md";n.default=s.exports}}]);