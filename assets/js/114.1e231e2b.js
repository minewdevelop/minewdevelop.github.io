(window.webpackJsonp=window.webpackJsonp||[]).push([[114],{446:function(a,t,s){"use strict";s.r(t);var e=s(14),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"minewkeyfinder-ios开发套件说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#minewkeyfinder-ios开发套件说明"}},[a._v("#")]),a._v(" MinewKeyfinder iOS开发套件说明")]),a._v(" "),t("h3",{attrs:{id:"开始之前的配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始之前的配置"}},[a._v("#")]),a._v(" 开始之前的配置")]),a._v(" "),t("p",[a._v("SDK使用的Cocoa模块：CoreLocation（用于记录设备断开时的地理位置）/CoreBluetooth（用于实现手机与设备之间的通信交互）。")]),a._v(" "),t("p",[a._v("苹果逐年收紧设备模块的权限，因此需要在项目工程的Plist文件中添加如下配置：")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[a._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" 蓝牙 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("NSBluetoothPeripheralUsageDescription"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("string"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("App需要您的同意"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("才能使用蓝牙模块"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("string"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n  "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" 位置 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("NSLocationUsageDescription"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("string"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("App需要您的同意"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("才能访问位置信息"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("string"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" 在使用期间访问位置 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("NSLocationWhenInUseUsageDescription"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("string"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("App需要您的同意"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("才能在使用期间访问位置信息"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("string"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n  \n 如果需要持续的后台扫描，那么还需要添加如下配置：\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v(" 始终访问位置 "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("NSLocationAlwaysUsageDescription"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("key"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("string"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("App需要您的同意"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("才能始终访问位置信息"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("string"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" \n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br")])]),t("p",[a._v("同时按如下步骤打开后台相关权限：")]),a._v(" "),t("p",[a._v("Target -> Your Project -> Capabilities -> Background Modes 打开 Location updates和 Uses Bluetooth LE accessories")]),a._v(" "),t("p",[a._v("以上我们就完成了项目的初始配置工作。")]),a._v(" "),t("p",[a._v("特别提醒：目前iOS10.2版本中存在一个蓝牙状态的Bug，当用户手动关闭蓝牙时，系统总是回调蓝牙处于开启状态，请知悉。")]),a._v(" "),t("h3",{attrs:{id:"开始使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开始使用"}},[a._v("#")]),a._v(" 开始使用")]),a._v(" "),t("h4",{attrs:{id:"设备管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设备管理"}},[a._v("#")]),a._v(" 设备管理")]),a._v(" "),t("p",[a._v("MinewDeviceManager（以下简称Manager）类是一个单例管理类，用来管理扫描／连接／绑定设备以及设备的状态更新等，当然，如果设备有诸如连接状态改变之类的事件，也可以从此类获取到回调。")]),a._v(" "),t("p",[a._v("1.初始化Manager，配置代理：")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[a._v("MinewDeviceManager "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("manager "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("MinewDeviceManager sharedInstance"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nmanager"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("delegate "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("self")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("2.发起扫描，检索周围的设备:")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("manager startScan"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\t\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("发起扫描后，当Manager检测到周围的设备，会为这些设备依次创建一个MinewDevice实例，同时通过以下三个代理方法回调。")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// 只要Manager发现周围的设备此方法即进行回调，devices参数包括所有被扫描过的设备\n- (void)manager:(MinewDeviceManager *)manager didScanDevices:(NSArray <MinewDevice *>*)devices;\n\n// 此方法仅当设备消失时才进行回调（PS：我们规定，如果被扫描的设备10秒内没有再次被扫描到，那就是消失了。）\n- (void)manager:(MinewDeviceManager *)manager disappearDevices:(NSArray<MinewDevice *> *)devices;\n\n// 此方法仅当新出现设备时才进行回调（PS：我们规定，如果设备第一次被扫描到或者之前消失过再次被扫描到都将当作新出现设备。）\n- (void)manager:(MinewDeviceManager *)manager appearDevices:(NSArray <MinewDevice *> *)devices;\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br")])]),t("p",[a._v("当然，开发者也可以使用如下方式主动获取当前扫描到的所有设备：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("NSArray *devices = manager.scannedDevices;\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("3.绑定设备：")]),a._v(" "),t("p",[a._v("只有设备被绑定后，我们才对设备的状态进行持续更新，特别是设备与手机之间的连接状态更新。")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("manager bind"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("aDevice"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("同时，开发者还可以用以下方式获取到之前绑定过的所有设备：")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[a._v("NSArray "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("bindDevices "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" manager"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("bindDevices"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("4.连接到设备：")]),a._v(" "),t("p",[a._v("我们提供了主动连接的API，同时通过代理方法监听设备的连接状态改变：")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("manager connect"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("aDevice"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("如果设备发生连接状态的改变，将通过以下代理方法回调给开发者：")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 当设备的连接状态发生改变，此方法将会回调")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("manager"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("MinewDeviceManager "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("manager didDevice"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("MinewDevice "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("device updateLinkState"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("DeviceLinkState"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("state"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("针对已经绑定的设备，我们提供了持续更新设备数据的回调")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 当绑定的设备发生数据改变时，此方法将会回调。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("manager"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("MinewDeviceManager "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("manager didUpdateBindDevice"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("NSArray "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("MinewDevice "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("devices"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h3",{attrs:{id:"工作开关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工作开关"}},[a._v("#")]),a._v(" 工作开关")]),a._v(" "),t("p",[a._v("2.1.1版本加入的控制开关，由于iOS10收紧了电源策略，我们调整了重连以及后台唤醒逻辑，这部分操作将唤醒应用（无论应用是否运行过），所以提供了一个手动开关来控制是否进行自动重连等操作。")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("@property")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("nonatomic"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" assign"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" BOOL disableAutoProcessing"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("此属性默认为NO，如果需要停止自动工作，需要设置为YES，只要对此属性进行Set操作，相关工作状态将会立即生效。另外值得注意的是，在取值为YES的状态下，是不能进行绑定设备操作的（Demo中有示例）。")]),a._v(" "),t("p",[a._v("警告：如果您不清晰此属性所带来的影响，请不要随意修改。")]),a._v(" "),t("p",[a._v("更多详情请见Demo。")]),a._v(" "),t("h4",{attrs:{id:"单个设备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#单个设备"}},[a._v("#")]),a._v(" 单个设备")]),a._v(" "),t("p",[a._v("对于单个设备，我们为每个设备生成一个MinewDevice（以下简称Device）实例，每个实例包含了设备的信息，以及对设备的操作方法和相关回调。")]),a._v(" "),t("p",[a._v("关于设备信息，目前采用键值对的方式获取。比如获取Device的mac地址：")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获取MAC地址的value")]),a._v("\nMinewValue "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("aDevice getValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("ValueIndex_MacAddress"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 获取MAC地址")]),a._v("\nNSString "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("macString "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("stringValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])]),t("p",[a._v("你可能注意到了，这里的  -(MinewDeviceValue *)getValue:(ValueIndex)index方法返回的是一个MinewValue（以下简称value）类实例，value实例是对多种数据类型的进一步封装，比如bool／integer／string／float等。关于Device信息的对照，后文有更详细的说明。")]),a._v(" "),t("p",[a._v("对于Device实例某项数据进行修改参见如下代码：")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 生成一个MinewValue实例")]),a._v("\nMinewValue "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("MinewValue index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("ValueIndex_Name value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('@"Awesome"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 配置设备名称")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("aDevice setValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("如果要修改的数据是布尔型／整型／浮点型，请按照如下示例进行：")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 配置设备断开报警的延迟时间")]),a._v("\nMinewValue "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("delayValue "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("MinewValue index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("ValueIndex_AlarmDelay value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("@")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.f")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("aDevice setValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("delayValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 配置设备断开是否报警")]),a._v("\nMinewValue "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v("loseAlertValue "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("MinewValue index"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("ValueIndex_DeviceLoseAlert value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("@")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("YES"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("aDevice setValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("loseAlertValue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br")])]),t("p",[a._v("我们提供了一些指令，用来控制设备上的一些特性，比如，查找设备，指令发送成功后设备将会响铃")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("aDevice sendInstruction"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("InstrucIndex_Search"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("当指令发送完成后，同样能从回调中获取指令是否成功发送的回调")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// index参数是对应的指令枚举，device是某个设备对应的实例，success是布尔值，标注是否成功。")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("didSendInstruction"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("InstrucIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("index toDevice"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("MinewDevice "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("device result"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("BOOL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("success"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("当然，还有一些事件不是主动触发的，比如设备向手机发送了一个指令，我们可以使用以下方式监听来自设备端的指令：")]),a._v(" "),t("div",{staticClass:"language-objc line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-objc"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// index参数是设备发来的指令枚举")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("didReceiveInstruction"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("InstrucIndex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("index fromDevice"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("MinewDevice "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("device"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("OK，至此你已经可以着手开发了，我们提供了一份Demo代码，你可以对MinewDeviceManager和MinewDevice进行二次封装，用来保证准确接受到每一次的事件回调，当然，这样的示例在Demo里也是有的。")]),a._v(" "),t("p",[a._v("##关于MinewDeviceValue的附加说明\n通过设备的属性可以获取到对应类型的值，比如")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v(" 设备名称： NSString *name = aDeviceValue.stringValue\n 电池电量：NSInteger battery = aDeviceValue.intValue;\n 是否绑定：BOOL bind = aDeviceValue.boolValue;\n")])])]),t("p",[a._v("DeviceValue实例共有如下几种属性，可以获取到对应类型的数据，")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("// 数据对应的枚举\n@property (nonatomic, readonly, assign) ValueIndex index;\n\n// 获取整形数据\n@property (nonatomic, readonly, assign) NSInteger intValue;\n\n// 获取浮点型数据\n@property (nonatomic, readonly, assign) float floatValue;\n\n// 获取字符串型数据\n@property (nonatomic, readonly, copy) NSString *stringValue;\n\n// 获取16进制data型数据\n@property (nonatomic, readonly, strong) NSData  *dataValue;\n\n// 获取bool类型数据\n@property (nonatomic, readonly, assign) BOOL boolValue;\n")])])]),t("p",[a._v("如果需要修改设备的某项信息，可以自行生成一个Value实例")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v(' // 生成一个MinewDeviceValue实例\n+ (MinewDeviceValue *)index:(ValueIndex)index value:(id)value;\n\n 比如创建名字实例\n MinewDeviceValue *nameValue = [MinewDeviceValue index:ValueIndex_Name value:@"手机"];\n \n 创建设备模式实例 \n MinewDeviceValue *modeValue = [MinewDeviceValue index:ValueIndex_Mode value:@2];\n  \n PS：由于基础数据类型在Objective C中不可以以范型方式传递，所以整型、浮点型、布尔型在赋值时必须转换成NSNumber类型，例如：@（10），@（12.3），@（YES）\n \n 另外需要注意的是，所有的数据在获取以及生成时，必须严格按照以下对应关系进行。另外并非全部信息都可以被修改，请看下表：\n')])])]),t("table",[t("thead",[t("tr",[t("th",[a._v("设备属性")]),a._v(" "),t("th",[a._v("说明")]),a._v(" "),t("th",[a._v("数据类型")]),a._v(" "),t("th",[a._v("读写权限")]),a._v(" "),t("th",[a._v("备注")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("ValueIndex_Name")]),a._v(" "),t("td",[a._v("自定义的设备名")]),a._v(" "),t("td",[a._v("stringValue")]),a._v(" "),t("td",[a._v("可读写")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_HeadImage")]),a._v(" "),t("td",[a._v("设备头像")]),a._v(" "),t("td",[a._v("dataValue")]),a._v(" "),t("td",[a._v("可读写")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_DeviceId")]),a._v(" "),t("td",[a._v("从设备读取到的名称")]),a._v(" "),t("td",[a._v("stringValue")]),a._v(" "),t("td",[a._v("只读")]),a._v(" "),t("td",[a._v("蓝牙返回的设备名")])]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_MacAddress")]),a._v(" "),t("td",[a._v("Mac地址")]),a._v(" "),t("td",[a._v("stringValue")]),a._v(" "),t("td",[a._v("只读")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_Rssi")]),a._v(" "),t("td",[a._v("信号强度")]),a._v(" "),t("td",[a._v("intValue")]),a._v(" "),t("td",[a._v("只读")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_Mode")]),a._v(" "),t("td",[a._v("设备模式")]),a._v(" "),t("td",[a._v("intValue")]),a._v(" "),t("td",[a._v("可读写")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_Distance")]),a._v(" "),t("td",[a._v("设备距离")]),a._v(" "),t("td",[a._v("floatValue")]),a._v(" "),t("td",[a._v("只读")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_Battery")]),a._v(" "),t("td",[a._v("电池电量")]),a._v(" "),t("td",[a._v("intValue")]),a._v(" "),t("td",[a._v("只读")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_Bind")]),a._v(" "),t("td",[a._v("绑定状态")]),a._v(" "),t("td",[a._v("boolValue")]),a._v(" "),t("td",[a._v("只读")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_DisappearTime")]),a._v(" "),t("td",[a._v("断开时间")]),a._v(" "),t("td",[a._v("stringValue")]),a._v(" "),t("td",[a._v("只读")]),a._v(" "),t("td",[a._v("格式：yyyy-MM-dd hh:mm:ss")])]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_DisappearLong")]),a._v(" "),t("td",[a._v("断开经度")]),a._v(" "),t("td",[a._v("floatValue")]),a._v(" "),t("td",[a._v("只读")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_DisappearLati")]),a._v(" "),t("td",[a._v("断开纬度")]),a._v(" "),t("td",[a._v("floatValue")]),a._v(" "),t("td",[a._v("只读")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_Connected")]),a._v(" "),t("td",[a._v("连接状态")]),a._v(" "),t("td",[a._v("boolValue")]),a._v(" "),t("td",[a._v("只读")]),a._v(" "),t("td")]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_DeviceLoseAlert")]),a._v(" "),t("td",[a._v("断开报警")]),a._v(" "),t("td",[a._v("boolValue")]),a._v(" "),t("td",[a._v("可读写")]),a._v(" "),t("td",[a._v("标记设备断开时是否响铃")])]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_Search")]),a._v(" "),t("td",[a._v("查找状态")]),a._v(" "),t("td",[a._v("boolValue")]),a._v(" "),t("td",[a._v("可读写")]),a._v(" "),t("td",[a._v("用于UI更新，设备是否被查找")])]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_AppLoseAlert")]),a._v(" "),t("td",[a._v("断开通知")]),a._v(" "),t("td",[a._v("boolValue")]),a._v(" "),t("td",[a._v("可读写")]),a._v(" "),t("td",[a._v("用于标记设备断开时手机端是否需要反馈")])]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_FeatureSupport")]),a._v(" "),t("td",[a._v("设备是否支持参数调整")]),a._v(" "),t("td",[a._v("boolValue")]),a._v(" "),t("td",[a._v("只读")]),a._v(" "),t("td",[a._v("如果设备支持距离调节或者延迟报警调节，这里的值为YES")])]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_AlarmDistance")]),a._v(" "),t("td",[a._v("调节设备的报警距离")]),a._v(" "),t("td",[a._v("intValue")]),a._v(" "),t("td",[a._v("可读写")]),a._v(" "),t("td",[a._v("一共有1-8，8个档位，距离由近到远（仅针对支持的设备）")])]),a._v(" "),t("tr",[t("td",[a._v("ValueIndex_AlarmDelay")]),a._v(" "),t("td",[a._v("调节设备断开时的报警延迟")]),a._v(" "),t("td",[a._v("intValue")]),a._v(" "),t("td",[a._v("可读写")]),a._v(" "),t("td",[a._v("0-8秒可调范围")])])])]),a._v(" "),t("h2",{attrs:{id:"changelog"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}},[a._v("#")]),a._v(" ChangeLog")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("2017.4.24   ver 2.1.2 更新部分文本描述；\n2017.4.19   ver 2.1.1 添加工作开关。；\n2017.1.3    ver 2.0 添加权限说明以及新特性说明；\n2016.9.12   Ver 1.0\n")])])]),t("p",[a._v("​")]),a._v(" "),t("p",[a._v("​")])])}),[],!1,null,null,null);t.default=n.exports}}]);