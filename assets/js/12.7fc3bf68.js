(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{231:function(e,n,a){"use strict";a.r(n);var t=a(0),s=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"minewbeaconadmin-software-development-kit-api-reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minewbeaconadmin-software-development-kit-api-reference","aria-hidden":"true"}},[e._v("#")]),e._v(" MinewBeaconAdmin Software Development Kit APi Reference")]),e._v(" "),a("p",[e._v("you can change beacons' parameters around via this SDK, such as: uuid, major, minor and so on. we provided 4 Class to implementation the functions.")]),e._v(" "),a("h3",{attrs:{id:"minewbeaconmanager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minewbeaconmanager","aria-hidden":"true"}},[e._v("#")]),e._v(" MinewBeaconManager")]),e._v(" "),a("p",[e._v("A manager for scanning devices；")]),e._v(" "),a("p",[e._v("functions：")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("start／stop scanning tasks；")])]),e._v(" "),a("li",[a("p",[e._v("get all devices in range / get all devices scanned;")])]),e._v(" "),a("li",[a("p",[e._v("get bluetooth state;")])]),e._v(" "),a("li",[a("p",[e._v("listen the appear and disappear of devices;")])]),e._v(" "),a("li",[a("p",[e._v("update data of devices scanned(via delegate methods)")])]),e._v(" "),a("li",[a("p",[e._v("listen the changes of bluetooth state(via delegate methods)")]),e._v(" "),a("p",[e._v("​")])])]),e._v(" "),a("h3",{attrs:{id:"minewbeacon"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minewbeacon","aria-hidden":"true"}},[e._v("#")]),e._v(" MinewBeacon")]),e._v(" "),a("p",[e._v("Device instance Class")]),e._v(" "),a("p",[e._v("all the properties of this class is read-only, the SDK will update the newest data of devices cyclically(if the device in range).")]),e._v(" "),a("p",[e._v("Function ：")]),e._v(" "),a("ol",[a("li",[e._v("export device data to JSON string；")]),e._v(" "),a("li",[e._v("import JSON string；")])]),e._v(" "),a("h3",{attrs:{id:"minewbeaconconnection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minewbeaconconnection","aria-hidden":"true"}},[e._v("#")]),e._v(" MinewBeaconConnection")]),e._v(" "),a("p",[e._v("a connection handle between device and iPhone.")]),e._v(" "),a("p",[e._v("each instance of this class has a MinewBeacon and MinewBeaconSetting(in connection state).")]),e._v(" "),a("p",[e._v("Function:")]),e._v(" "),a("ol",[a("li",[e._v("connect to a device / disconnect from a device;")]),e._v(" "),a("li",[e._v('update the changes of "MinewBeaconSetting" to device (delegate method will tell the operation result)')])]),e._v(" "),a("h3",{attrs:{id:"minewbeaconsetting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minewbeaconsetting","aria-hidden":"true"}},[e._v("#")]),e._v(" MinewBeaconSetting")]),e._v(" "),a("p",[e._v("a instance when device connected")]),e._v(" "),a("p",[e._v("you will get a instance of this class when connect to a device, some of the properties can be modified, the SDK will cache the changes, it will take effective when you update the changes via Connction instance.")]),e._v(" "),a("p",[e._v("Function:")]),e._v(" "),a("ol",[a("li",[e._v("export to JSON string;")]),e._v(" "),a("li",[e._v("import JSON string;")])]),e._v(" "),a("h2",{attrs:{id:"get-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-started","aria-hidden":"true"}},[e._v("#")]),e._v(" Get started")]),e._v(" "),a("h4",{attrs:{id:"scan-devices"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scan-devices","aria-hidden":"true"}},[e._v("#")]),e._v(" Scan devices")]),e._v(" "),a("p",[e._v("use MinewBeaconManager to scan, SDK will create MinewBeacon instances for devices scanned;")]),e._v(" "),a("div",{staticClass:"language-objective-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\n// 1. get minewBeaconManager instance, set a delegate \nMinewBeaconManager *manager = [MinewBeaconManager sharedInstance];\nmanager.delegate = self;\n\n// 2.start scan\n[manager startScan];\n\n// 3.get data update via delegate\n// this method execute cyclically for data update.\n- (void)minewBeaconManager:(MinewBeaconManager * )manager didRangeBeacons:(NSArray<MinewBeacon *> * )beacons;\n\n\n\n/* listen to the appear and disapper status of devices via delegate below*/\n// listen to the disappear devices.\n- (void)minewBeaconManager:(MinewBeaconManager * )manager disappearBeacons:(NSArray<MinewBeacon *> *)beacons;\n\n// listen to the appear devices.\n- (void)minewBeaconManager:(MinewBeaconManager * )manager appearBeacons:(NSArray<MinewBeacon *> *)beacons;\n\n/* listen to the change of bluetooth state */\n// state: poweron poweroff unknown\n// it will work normally when bluetooth poweron\n- (void)minewBeaconManager:(MinewBeaconManager *)manager didUpdateState:(BluetoothState)state;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br")])]),a("h4",{attrs:{id:"connection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#connection","aria-hidden":"true"}},[e._v("#")]),e._v(" Connection")]),e._v(" "),a("p",[e._v('create a "MinewBeaconConnection" instance with a "MinewBeacon" instance, you can manager connect / disconnect / data update via Connection.')]),e._v(" "),a("div",{staticClass:"language-objective-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// 1. create a Connection instance via a MinewBeacon instance，set a delegate\nMinewBeaconConnection *connection = [[MinewBeaconConnection alloc]initWithBeacon:abeacon];\nconnection.delegate = self;\n\n// 2. connect to a device\n[MinewBeaconConnection connect];\n\n// 3.get connection status via delegate method\n- (void)beaconConnection:(MinewBeaconConnection *)connection didChangeState:(ConnectionState)state\n{\n  // the MinewBeaconSetting property of connection instance is not nil when connection status is connected, MinewBeaconSetting is a data model for device.\n  if(state == ConnectionStateConnected)\n  {\n    NSLog(@"connect a device：%@，uuid：%@，major：%d...",connection.setting.name, connection.setting.uuid, connection.setting.major);\n  }\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br")])]),a("h3",{attrs:{id:"device-settings"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#device-settings","aria-hidden":"true"}},[e._v("#")]),e._v(" Device settings")]),e._v(" "),a("p",[e._v("you can modify all read-only properties of setting instance when connection connected, then update to device make it takes effective,")]),e._v(" "),a("div",{staticClass:"language-objective-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('// 1.change the setting property of connection\nMinewbeaconSetting *setting = aConnection.setting;\nsetting.uuid = @"FDA50693-A4E2-4FB1-AFCF-C6EB07647825";\nsetting.major = 1234;\nsetting.minor = 4321;\nsetting.name = @"MinewBeacon";\n/*.....*/\n\n// 2.update changes to device.\n// !!! be careful, this parameter is a current reboot password;\n[aConnection writeSetting:@"minew123"];\n\n// 3. get update result via delegate method\n- (void)beaconConnection:(MinewBeaconConnection *)connection didWriteSetting:(BOOL)success\n{\n   if(success)\n     NSLog(@"all changes has updated!");\n   else \n     NSLog(@"update failed!");\n}\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br")])]),a("p",[e._v("More details, see the demo.")]),e._v(" "),a("h2",{attrs:{id:"change-log"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#change-log","aria-hidden":"true"}},[e._v("#")]),e._v(" Change log")]),e._v(" "),a("p",[e._v("2017.10.16 English version.")])])}],!1,null,null,null);s.options.__file="iOS_BeaconAdmin_Software_Development_Kit_Guide.md";n.default=s.exports}}]);