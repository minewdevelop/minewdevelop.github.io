(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{193:function(s,n,a){s.exports=a.p+"assets/img/BeaconSET+.bcc1157c.png"},194:function(s,n,a){s.exports=a.p+"assets/img/add_frameworks.8a932d1c.png"},195:function(s,n,a){s.exports=a.p+"assets/img/make_sure_frameworks.d4466176.png"},196:function(s,n,a){s.exports=a.p+"assets/img/bp_access.795e088e.png"},215:function(s,n,a){"use strict";a.r(n);var e=[function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"beaconplus-ios开发套件说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#beaconplus-ios开发套件说明","aria-hidden":"true"}},[s._v("#")]),s._v(" BeaconPlus iOS开发套件说明")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("持续更新中...")]),s._v("\n​       本套SDK仅支持基于miniBeaconPlus固件的设备，不再兼容之前的iBeacon，Eddystone等其它设备。相对于之前的单一通道设备SDK来说，现在的这一套BeaconSET+ SDK支持的特性更多。当然开发过程中也遇到过诸多问题，我们会在本文档说明设计缘由以及注意事项。所以，请仔细阅读此文档以便尽快上手进行项目开发。")])]),s._v(" "),e("p",[s._v("​       请按需阅读以下每个部分，第一部分我们会说明这套SDK的整体架构，第二部分会帮助开发者上手开发，第三部分会提及开发过程中的注意事项，第四部分可以查阅到错误码的对应说明。")]),s._v(" "),e("h1",{attrs:{id:"设计说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设计说明","aria-hidden":"true"}},[s._v("#")]),s._v(" 设计说明")]),s._v(" "),e("p",[s._v("我们在SDK里把手机对设备的操作分成了两个阶段：广播阶段和连接阶段。为了便于理解，我们先来看看我们都提供了哪些可以操作的类以及它们的职责：")]),s._v(" "),e("p",[e("em",[s._v("MTCentralManager：")]),s._v(" 全局管理，可以检查当前手机的蓝牙状态，监听系统的蓝牙状态改变。另外最重要的是可以扫描以及连接到这些设备；")]),s._v(" "),e("p",[e("em",[s._v("MTPeripheral：")]),s._v(" 设备实例，当CentralManager发现一个新设备时，会对应为其生成一个MTPeripheral实例，以真实的物理设备为单位，一个设备对应一个MTPeripheral实例。它包括了MTConnectionHandler和MTFrameHandler两个属性（下文会继续描述这两个属性的作用）。")]),s._v(" "),e("p",[s._v("*MTFrameHandler：*广播包解析，这个类可以解析某个设备所广播出来的所有数据包，也就是说，它是扫描阶段的核心，所有由MTCentralManager扫描出来的广播数据都由它来解析成对应的数据帧实例。")]),s._v(" "),e("p",[s._v("*MTConnectionHandler：*连接状态操作，所有连接上设备后发生的操作都是由此类完成，包括监听连接状态改变，读取数据，写入数据等。")]),s._v(" "),e("p",[s._v("*MinewFrame：*数据帧，每个此类（或者子类）实例都对应一种数据帧，一般会由MTFrameHandler生成，如果设备正在广播多种数据帧，就会生成多个对应的MinewFrame实例。这些实例可以通过MTFrameHandler获取到。")]),s._v(" "),e("p",[s._v("*MTOTAManager：*空中升级，此类只能用来更新设备固件，它操作的是MTConnectionHandler实例。")]),s._v(" "),e("h1",{attrs:{id:"整体架构："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#整体架构：","aria-hidden":"true"}},[s._v("#")]),s._v(" 整体架构：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(193),alt:"BeaconSET+"}})]),s._v(" "),e("h2",{attrs:{id:"广播阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#广播阶段","aria-hidden":"true"}},[s._v("#")]),s._v(" 广播阶段")]),s._v(" "),e("p",[s._v("这个阶段主要是扫描周围的miniBeaconPlus设备和解析这些设备上的广播数据，首先MTCentralManager发起扫描，MTCentralManager会为每一个物理设备生成一个MTPeripheral实例，开发者可以通过它的MTFrameHandler属性拿到关于此设备的所有广播数据。")]),s._v(" "),e("h2",{attrs:{id:"连接阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接阶段","aria-hidden":"true"}},[s._v("#")]),s._v(" 连接阶段")]),s._v(" "),e("p",[s._v("当MTCentralManager扫描到物理设备并生成MTPeripheral实例后，就可以连接到设备，此时针对设备的连接操作都是通过MTConnectionHandler来完成的。")]),s._v(" "),e("h2",{attrs:{id:"ota单独说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ota单独说明","aria-hidden":"true"}},[s._v("#")]),s._v(" OTA单独说明")]),s._v(" "),e("p",[s._v("常规的OTA逻辑比较复杂，所以单独封装了MTOTAManager来执行OTA操作，必须在已经和设备建立连接的状态下才能进行。")]),s._v(" "),e("h1",{attrs:{id:"开始上手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开始上手","aria-hidden":"true"}},[s._v("#")]),s._v(" 开始上手")]),s._v(" "),e("h2",{attrs:{id:"准备工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#准备工作","aria-hidden":"true"}},[s._v("#")]),s._v(" 准备工作")]),s._v(" "),e("h3",{attrs:{id:"开发环境："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发环境：","aria-hidden":"true"}},[s._v("#")]),s._v(" 开发环境：")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("Xcode9+，由于使用的DFU和Zip框架基于Swift4.0开发，所以请使用Xcode9及更高版本进行开发；")])]),s._v(" "),e("li",[e("p",[s._v("iOS8，限制最低系统版本为iOS8；")])])]),s._v(" "),e("h3",{attrs:{id:"导入到工程："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导入到工程：","aria-hidden":"true"}},[s._v("#")]),s._v(" 导入到工程：")]),s._v(" "),e("ol",[e("li",[s._v("将开发套件的三个framework文件：MTBeaconPlus.framework, iOSDFULibrary.framework, Zip.framework拷贝到项目工程目录下，然后添加到工程中，target为当前的工程，然后点“Add”，如下图所示：")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(194),alt:"add frameworks"}})]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("p",[s._v("依次找到：“Target” -> General -> Embedded Binaries，点击下面的“+”，将上述3个Framework文件添加进来，同样的，也需要添加到 ”Linked Frameworks and Libraries“，添加完应该如下图：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(195),alt:"make sure frameworks"}})])]),s._v(" "),e("li",[e("p",[s._v("*如果使用Swift开发，需要添加一个Objective C BridgingHeader .h文件（此处不再赘述），并且在此文件添加：import <MTBeaconPlus/MTBeaconPlus.h>，如果使用Objective C进行开发，在需要的文件的顶端添加：import <MTBeaconPlus/MTBeaconPlus.h>")])]),s._v(" "),e("li",[e("p",[s._v('!!!在iOS10及以上版本，苹果对蓝牙APi添加了权限限制，你需要在工程的info.plist文件里添加一项字符串：Privacy - Bluetooth Peripheral Usage Description - "你的使用描述"。如下图所示：')]),s._v(" "),e("p",[e("img",{attrs:{src:a(196),alt:"bp_access"}})])])]),s._v(" "),e("h2",{attrs:{id:"开始开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开始开发","aria-hidden":"true"}},[s._v("#")]),s._v(" 开始开发")]),s._v(" "),e("h3",{attrs:{id:"获取管理类单例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取管理类单例","aria-hidden":"true"}},[s._v("#")]),s._v(" 获取管理类单例")]),s._v(" "),e("p",[s._v("首先开发者需要获取一个管理类单例，并且做好开发者需要的监听：")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// 获取管理类单例\nMTCentralManager *manager = [MTCentralManager sharedInstance];\n\n// 如果需要监听系统蓝牙状态变化请这样做\n// *** 还可以通过state属性主动获取\n// *** 仅当state == PowerStatePoweredOn时开发套件才可正常工作\nmanager.stateBlock = ^(PowerState state) {\n     NSLog("当前系统蓝牙状态：%d",state);\n};\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h3",{attrs:{id:"扫描设备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#扫描设备","aria-hidden":"true"}},[s._v("#")]),s._v(" 扫描设备")]),s._v(" "),e("p",[s._v("需要通过扫描来发现附近的设备，这样才能获取它们的广播内容，连接并修改设备参数等。")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/*\n  manager: MTCentralManager的单例\n*/\n\n// 执行扫描方法\n[manager startScan:^(NSArray<MTPeripheral *> *peris){\n  \n   // 遍历数组，获取每个设备实例\n   // 也可以把它们绑定到UI上，将所有数据显示出来。\n    for(NSInteger i = 0; i < peris; i ++){\n        MTPeripheral *peri = peris[i];\n        \n        // 获取设备广播阶段实例\n        // 部分属性可能为空，请参见“注意事项”\n        MTFrameHandler *framer = peri.framer; \n        NSString *name = framer.name;          // 设备名, 可能为空\n        NSInteger rssi = framer.rssi;          // rssi\n        NSInteger battery = framer.battery;    // 电池，可能为空\n        NSString *mac = framer.mac;            // mac地址， 可能为空\n        NSArray *frames = framer.advFrames;    // 设备广播的所有数据帧（iBeacon，UID，URL...）\n    }\n}];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("p",[s._v("另外，你可以在任何时候停止扫描任务。")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/*\n  manager: MTCentralManager的单例\n*/\n\n// 通过这种方式停止扫描\n[manager stopScan];\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("通过以上方式我们就可以获取到设备在广播阶段的所有相关数据，进一步的，想要从frameHandler里获取到所有的数据帧，可以参考以下代码示例：")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('/*\n  aFrameHandler: MTFrameHandler实例，\n*/\n\nNSArray *frames = aFrameHandler.advFrames;\nfor (NSInteger i = 0; i < frames.count; i ++){\n    MinewFrame *frame = frames[i];\n    \n    switch(frame.frameType){\n      case FrameiBeacon: \n        {\n          MinewiBeacon *bea = (MinewiBeacon *)frame;\n          NSLog(@"iBeacon:%@, %d, %d",bea.uuid, bea.major, bea.minor);\n        }\n           break;\n        \n      case FrameUID:\n        {\n           MinewUID *uid = (MinewUID *)frame;\n           NSLog(@"UID:%@, %@", uid.namespaceId, uid.instanceId);\n        }\n           break;\n      /*\n         更多类型，请自行处理\n      */\n    }\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[s._v("**重要提示：**在获取所有的传感器数据时，如果值等于"),e("em",[s._v("MTNAValue")]),s._v('（我们定义的无效值常量，在"MTPublicHeader.h“文件中），表示这个数据是无效的。所有的传感器实例（MinewHTSensor，MinewLightSensor，MinewAccSensor）都有这种情况。')]),s._v(" "),e("p",[s._v("请参考以下代码：")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('/*\n    aHT: MinewHTSensor实例\n    aLight: MinewLightSensor实例\n    aAcc： MinewAccSensor实例\n*/\n\nif (aHT.temperature == MTNAValue) {\n    NSLog(@"this value is not available.")\n}\n\nif (aLight.luxValue == MTNAValue) {\n    NSLog(@"this value is not available.")\n}\n\nif (aAcc.XAxis) {\n    NSLog(@"this value is not available.")\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("h3",{attrs:{id:"连接设备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接设备","aria-hidden":"true"}},[s._v("#")]),s._v(" 连接设备")]),s._v(" "),e("p",[s._v("要对设备进一步操作（修改参数，OTA），需要先连接到设备。由于有些设备在连接时可能需要密码验证，所以验证密码的Block为必须实现，否则将引起Crash!!! 如下代码所示：")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('/*\n  manager： MTCentralManager的单例\n  aMTPeripheral： MTPeripheral实例\n*/\n\n// 监听设备连接状态改变\naMTPeripheral.connector.statusChangeHandler = ^(ConnectionStatus status, NSError *error) {\n    \n    // 整个连接过程需要经过多个中间状态，如果遇到错误，会通过error抛出\n    // 只有当status == StatusCompleted时，才算是连接成功\n  \n};\n\n// 连接到设备\n// 需要一个MTPeripheral实例作为参数\n// !!!:特别提醒：passwordRequire为必须实现的\n[manager connectToPeripheral:aMTPeripheral passwordRequire:^(MTPasswordBlock passwordBlock){\n    // 给定一个8位长度的密码，\n    // !!! 实际开发中应该从UITextField读取输入的内容作为密码。\n    NSString *password = @"minew123";\n    passwordBlock(password);\n}];\n\n// 断开某个设备的连接状态\n[manager disconnectFromPeriperal:aMTPeripheral];\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("h3",{attrs:{id:"获取基本信息"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取基本信息","aria-hidden":"true"}},[s._v("#")]),s._v(" 获取基本信息")]),s._v(" "),e("p",[s._v("成功连接到设备后，就可以获取设备信息以及修改设备参数了。我们先来看看怎么获取各种基础数据。")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/*\n   aMTPeripheral： MTPeripheral实例\n*/\n\nMTConnectionHandler *con = aMTPeripheral.connector;\n\nConnectionStatus conSte = con.status;  // 当前的设备连接状态\nNSDictionary *infoDict = con.infoDict; // 设备信息，例如：（Firmware Version： 0.9.1）；\nNSString *mac = con.macString; // mac地址；\nConnectable able = con.connectable； // 标记设备是否可以连接，None未知，No不可连，Yes可连\nVersion version = con.version； // 固件版本枚举，方便处理版本号区分；\nPasswordStatus pwdStatus = con.passwordStatus; // 连接时是否需要密码，None不需要，Require需要\n\n\nMTConnectionFeature *feature = con.feature; // 设备特性；\nNSInteger slotAtitude = feature.slotAtitude; // 设备的广播通道数量，可以根据此动态生成UI；\nFeatureSupported feaSup = feature.featureSupported; // 可以调节参数类型：none不可调，adv可调，txpower可调，adv/txpower均可调\nNSArray<NSNumber *> *supFrames = feature.supportedSlots; // 支持的广播帧类型（多种）\nNSArray<NSNumber *> *supTxpower = feature.supportedTxpowers; // 支持的Txpower（多档位）\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("PS:")]),s._v(" "),e("strong",[s._v("MTConnectionHandler")]),s._v("的"),e("em",[s._v("Version")]),s._v("属性说明：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Versoin值来自设备的固件版本号，可以通过检查Version的值来判断当前设备支持的功能：\n \n// 初始化值 \nVersionUndefined\n\n// 基础版本，仅支持基础功能\nVersionBase\n\n// 此版本及以上支持自定义连接密码 / 设备信息广播帧\nVersion0_9_8\n\n// 此版本及以上支持远程关机命令\nVersion0_9_9\n\n// 此版本及以上开始支持触发器\nVersion2_0_0\n\n// 此版本及以上开始支持带广播设置的触发器配置\nVersion2_2_60\n\n// 理想值，支持所有特性。\nVersionMax = 1000\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("h3",{attrs:{id:"获取各通道数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#获取各通道数据","aria-hidden":"true"}},[s._v("#")]),s._v(" 获取各通道数据")]),s._v(" "),e("p",[s._v("接下来可以获取每个通道对应的参数数据，之所以单独讲这部分，是因为所有与修改相关的内容全部在这里。")]),s._v(" "),e("p",[s._v("在阅读代码之前，我们先来了解通道的概念：通道相当于一个广播工具，它不管里面是什么内容，只管把内容广播出来，例如一个6通道的设备可能是这样的：")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("通道序号")]),s._v(" "),e("th",[s._v("0")]),s._v(" "),e("th",[s._v("1")]),s._v(" "),e("th",[s._v("2")]),s._v(" "),e("th",[s._v("3")]),s._v(" "),e("th",[s._v("4")]),s._v(" "),e("th",[s._v("5")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("广播内容")]),s._v(" "),e("td",[s._v("iBeacon")]),s._v(" "),e("td",[s._v("TLM")]),s._v(" "),e("td",[s._v("UID")]),s._v(" "),e("td",[s._v("URL")]),s._v(" "),e("td",[s._v("HTSensor")]),s._v(" "),e("td",[s._v("None")])]),s._v(" "),e("tr",[e("td",[s._v("广播间隔（ms）")]),s._v(" "),e("td",[s._v("1000")]),s._v(" "),e("td",[s._v("2000")]),s._v(" "),e("td",[s._v("500")]),s._v(" "),e("td",[s._v("900")]),s._v(" "),e("td",[s._v("3000")]),s._v(" "),e("td",[s._v("0")])]),s._v(" "),e("tr",[e("td",[s._v("RSSI@0/1m（dbm）")]),s._v(" "),e("td",[s._v("-1")]),s._v(" "),e("td",[s._v("0")]),s._v(" "),e("td",[s._v("-4")]),s._v(" "),e("td",[s._v("-10")]),s._v(" "),e("td",[s._v("-3")]),s._v(" "),e("td",[s._v("0")])]),s._v(" "),e("tr",[e("td",[s._v("信号强度（dbm）")]),s._v(" "),e("td",[s._v("4")]),s._v(" "),e("td",[s._v("0")]),s._v(" "),e("td",[s._v("-4")]),s._v(" "),e("td",[s._v("4")]),s._v(" "),e("td",[s._v("0")]),s._v(" "),e("td",[s._v("0")])])])]),s._v(" "),e("p",[s._v("上表的意思是，第0个通道广播iBeacon数据，第1个通道广播TLM数据，…，第5个通道不广播任何数据。它们每个都有独立的广播间隔，信号强度和校准值，互相之间没有关系也不产生任何影响。")]),s._v(" "),e("p",[s._v("PS：校准值(RSSI@0/1m)指的是手机在设备0/1m（iBeacon为1，其它为0）处的信号强度。")]),s._v(" "),e("p",[s._v("接下来我们来看下怎么获取设备的通道数据。")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/*\n    con: MTConnectionHandler实例\n*/\n\n// 当前设备每一个通道对应的数据帧\n// 此数组的数量和通道数量保持一致（也就是feature.slotAtitude）\n// 按照通道顺序严格排序，比如：0. -> MinewiBeacon，1. -> MinewUID ...\nNSArray<MinewFrame *> *frames = con.allFrames;\n\n/*\n   假如第3个通道为iBeacon数据，第4个通道数据为UID，\n   我们尝试解析第3个通道的数据。\n*/\n\n// 由于默认指针是MinewFrame（MinewiBeacon的父级）类型，需要做一下转换。\n\n// 获取第3个通道的数据帧\nMinewFrame *frame = frames[2];\n\n// 确认此通道是iBeacon类型，如果类型确认，可以不需要做这一步判断\nif (frame.frameType == FrameiBeacon) {\n  \n    MinewiBeacon *iBeacon = (MinewiBeacon *)frame;\n  \n    // iBeacon数据\n    NSString *uuid = iBeacon.uuid;   // 获取uuid\n    NSInteger major = iBeacon.major;  // 获取major\n    NSInteger minor = iBeacon.minor;  // 获取minor\n  \n    // 所处通道的参数\n    NSInteger slotNumber = iBeacon.slotNumber           // 第几通道\n    NSInteger slotAdvInterval = iBeacon.slotAdvInterval // 此通道的广播间隔\n    NSInteger slotAdvTxpower = iBeacon.slotAdvTxpower   // 此通道的信号校准值 iBeacon：RSSI@1m others： RSSI@0m\n    NSInteger slotRadioTxpower = iBeacon.slotRadioTxpower // 此通道信号强度  \n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br")])]),e("p",[s._v("你可以使用同样的方式来解析其它所有通道，值得注意的是，当frameType == FrameNone 时，说明此通道没有广播数据。")]),s._v(" "),e("h3",{attrs:{id:"修改通道数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改通道数据","aria-hidden":"true"}},[s._v("#")]),s._v(" 修改通道数据")]),s._v(" "),e("p",[s._v("通过我们的开发套件，开发者可以自由的修改每个通道的广播数据。")]),s._v(" "),e("p",[s._v("我们区分了静态数据帧和动态数据帧，静态数据帧指的是广播数据不会发生变化的：iBeacon，UID，URL等等，动态数据帧指的是广播数据不定时发生变化的：TLM，各类传感器数据等。")]),s._v(" "),e("p",[s._v("可以通过下面的参考代码实现。")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('/*\n   aConnectionHandler: MTConnectionHandler实例\n*/\n\n// 生成一个uid实例\nMinewUID *uid = [[MinewUID alloc]init];\n\n// 配置uid的namespaceId和instanceId参数\nuid.namespaceId = @"0123456789abdcdcba12";\nuid.instanceId = @"0123456789dc";\n\n// 通道相关配置\nuid.slot = 1;  // 设置想要配置的通道序号\nuid.slotAdvInterval = 600;  // 配置这个通道的广播间隔\nuid.slotAdvTxpower = -3;    // 配置这个通道的信号校准值 RSSI@0m\nuid.slotRadioTxpower = 4;   // 配置这个通道的广播功率\n\n// 写入到设备\n// 详情：1.把1通道设置为UID广播，namespaceId：0123456789abdcdcba12，instanceId：0123456789dc\n//      2.设置1通道的广播间隔为600ms，RSSI@0m为-3dbm，广播功率为：4dbm\n[aConnectionHandler writeFrame:uid completion:^(BOOL success, NSError *error){\n     if（success）{\n        NSLog(@"write frame to device successfully.");   \n     } \n     else if(error) {\n        NSLog(@"Error:%@", error)\n     }\n}];\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br")])]),e("p",[s._v("请注意，以下通道参数设置必须在范围内：")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("广播间隔")]),s._v(": 100 - 5000 (ms)")]),s._v(" "),e("li",[e("strong",[s._v("RSSI@0m")]),s._v(": -127 - 0 (dbm)")])]),s._v(" "),e("p",[e("strong",[s._v("重要提醒")]),s._v(': 广播功率是档位值, 例如: -8, -4, 0, 4. 你可以通过"MTConnectionHandler"的feature属性里获取到当前设备支持的所有广播功率档位：')]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/*\n   feature: MTConnectionHandler实例的属性.\n*/\n\n// 获取当前设备支持的所有广播功率档位.\nNSArray<NSNumber *> *supTx = feature.supportedTxpowers\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("你可以通过相同的方式修改任何一个通道的广播数据，如果需要关闭某个通道，只需要创建一个frameType=FrameNone的MinewFrame对象写入到设备即可，当然，别忘了设置通道序号。")]),s._v(" "),e("h3",{attrs:{id:"修改设备全局参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#修改设备全局参数","aria-hidden":"true"}},[s._v("#")]),s._v(" 修改设备全局参数")]),s._v(" "),e("p",[s._v("设备全局参数指的是设备级的一些特性，比如：配置设备是否可连接，是否需要密码，恢复出厂等。")]),s._v(" "),e("p",[s._v("可以通过以下代码示例参考。")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('/*\n   aConnectionHandler: MTConnectionHandler实例\n*/\n// 恢复出厂设置\n[aConnectionHandler resetFactorySettings:^(BOOL success, NSError *error){\n    if(success){\n        NSLog(@"Operation success!");\n    }\n    else {\n        NSLog(@"Opertion failed!");\n    }\n}];\n\n// 更新设备可连接设置\n// YES为可连接，NO不可连接，\n// 配置设备不可连接后，可以通过按下设备上的按钮再次连接到设备。\n// !!!:如果设备上没有按钮，且把设备配置为不可连后，设备将无法再次被连接。\n[aConnectionHandler updateConnectable:YES completion:^(BOOL success, NSError *error){\n    if(success){\n        NSLog(@"Operation success!");\n    }\n    else {\n        NSLog(@"Opertion failed!");\n    }\n}];\n\n// 修改/增加密码\n// !!!: 只能设置8位密码，数字或英文字母；\n// 设备没有密码时，会添加密码，设备有密码时，会更新密码。\n[aConnectinoHandler modifyPassword:@"12345678" completion:^(BOOL success, NSError *error){\n    if(success){\n        NSLog(@"Operation success!");\n    }\n    else {\n        NSLog(@"Opertion failed!");\n    }\n}];\n\n// 移除密码\n[aConnectionHandler removePassword:^(BOOL success, NSError *error){\n    if(success){\n        NSLog(@"Operation success!");\n    }\n    else {\n        NSLog(@"Opertion failed!");\n    }\n}];\n\n// 远程关闭设备\n// !!!:请确认设备上有按钮，可以通过按下按钮的方式重启，否则关闭后无法重启设备。\n[aConnectionHandler poweroff];\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br")])]),e("h3",{attrs:{id:"读取设备上的温湿度数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#读取设备上的温湿度数据","aria-hidden":"true"}},[s._v("#")]),s._v(" 读取设备上的温湿度数据")]),s._v(" "),e("p",[s._v("BeaconPlus设备整合了温湿度，光感，加速度等多种传感器，目前我们提供了温湿度历史数据的读取接口。")]),s._v(" "),e("p",[s._v("请确认此设备带有温湿度传感器，否则无法正确获取数据。")]),s._v(" "),e("p",[s._v("可以通过以下代码示例参考。")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('/*\n   aConnectionHandler: MTConnectionHandler实例\n*/\n\n// 从设备上读取温湿度数据\n[aConnectionHandler readSensorHistory:^(MTSensorData *data, EndStatus end){\n  \n   NSInteger time = data.timestamp;   // 此数据的Unix时间戳；\n   double temp = data.temperature;    // 温度数据；\n   double humi = data.humidity;       // 湿度数据；\n   NSInteger index = data.index;      // 此数据的编号；\n  \n   if (end == EndStatusNone){\n       NSLog(@"there is no data.");\n   }\n   else if (end == EndStatusSuccess) {\n       NSLog(@"sensor data sync successfully!");\n   }\n   else if (end == EndStatusError) {\n       NSLog(@"something wrong in syncing progress.");   \n   }\n}];\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("p",[s._v("你可以用表格或者曲线的方式把这些数据生动的呈现出来。")]),s._v(" "),e("h3",{attrs:{id:"配置触发器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置触发器","aria-hidden":"true"}},[s._v("#")]),s._v(" 配置触发器")]),s._v(" "),e("p",[s._v("BeaconPlus设备加入了触发器功能，你可以给每个通道独立的配置触发器，仅当满足触发条件时设备才会开启对应通道进行广播，否则，对应通道将会一直处于关闭状态。")]),s._v(" "),e("p",[s._v("可以通过以下代码示例参考。")]),s._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('/*\n   aConnectionHandler: MTConnectionHandler实例\n*/\n\nNSInteger sn = 2;                          // 目标通道：2\nTriggerType type = TriggerTypeTempAbove;   // 触发条件：温度高于\nNSInteger value = 10;                      // 触发值：10\n\nMTTriggerData *trigger = [[MTTriggerData alloc]initWithSlot:sn triggerType:type value:value];\n\n// 写入到设备\n[aConnectionHandler writeTrigger:trigger completion:^(BOOL success, NSError){\n    if(success){\n        NSLog(@"write trigger successfully!");\n    }\n    else {\n        NSLog(@"write trigger failed!");\n    }\n}];\n\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("现在，你可以参考以上示例进行开发了。")]),s._v(" "),e("h1",{attrs:{id:"注意事项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意事项","aria-hidden":"true"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("在开发过程中你可能会发现，持续扫描一段时间，有些设备会出现多个MTPeripheral实例。关于这一点，我们咨询过苹果工程师。得到的答复是在目前的iOS平台下，CoreBluetooth对多通道广播（特别是广播数据在变化）设备并不友好。")]),s._v(" "),e("p",[s._v("iOS11中此问题已不再存在。")])]),s._v(" "),e("li",[e("p",[s._v("在扫描过程中，有些属性可能是无法获取的，特别是mac地址（iOS平台下的限制），如果当前设备广播了DeviceInfo数据帧，那么name，mac地址，电池都是可以获取到的。")])]),s._v(" "),e("li",[e("p",[s._v("当你成功连接到设备后，固件最多只保持5分钟连接。然后设备端会主动断开连接。")])])]),s._v(" "),e("h1",{attrs:{id:"文档版本记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#文档版本记录","aria-hidden":"true"}},[s._v("#")]),s._v(" 文档版本记录")]),s._v(" "),e("ul",[e("li",[s._v("2017.10.11  v1.0 初版；")])])])}],r=a(0),t=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},e,!1,null,null,null);t.options.__file="iOS_BeaconPlus_Software_Development_Kit_Guide.md";n.default=t.exports}}]);