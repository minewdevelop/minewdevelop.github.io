(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{197:function(a,t,s){a.exports=s.p+"assets/img/design.ac742719.png"},198:function(a,t,s){a.exports=s.p+"assets/img/addframework.afaca928.png"},199:function(a,t,s){a.exports=s.p+"assets/img/frameworkadded.f41a4903.png"},200:function(a,t,s){a.exports=s.p+"assets/img/bluetoothdescription.7ceeb2e7.png"},212:function(a,t,s){"use strict";s.r(t);var e=[function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("div",{staticClass:"content"},[e("h2",{attrs:{id:"minewmodulekit说明文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#minewmodulekit说明文档","aria-hidden":"true"}},[a._v("#")]),a._v(" MinewModuleKit说明文档")]),a._v(" "),e("p",[a._v("本套SDK仅支持Minew公司出品的蓝牙模块设备。通过SDK可以帮助开发者处理手机和蓝牙模块之间的一切工作，包括：扫描设备，连接设备，向设备写入数据，从设备接收数据等。")]),a._v(" "),e("h3",{attrs:{id:"前期工作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前期工作","aria-hidden":"true"}},[a._v("#")]),a._v(" 前期工作")]),a._v(" "),e("p",[a._v("整体框架如下图所示：MTModuleManager为设备管理类，在APP运行时始终是单例。MTModule是设备实例类，此套件会为每一个设备生成一个MTModule实例以便于对监听设备和操作设备。")]),a._v(" "),e("p",[a._v("整体设计思路如下图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(197),alt:"设计说明"}})]),a._v(" "),e("p",[a._v("*MTModuleManager：*设备管理类，可以扫描周围的Module设备，并且可以连接它们，校验它们等。")]),a._v(" "),e("p",[a._v("MTModule：设备实例类，当Manager发现一个物理设备时，Manager会生成一个Module实例，这个实例就对应一个物理设备。")]),a._v(" "),e("h3",{attrs:{id:"开始上手"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开始上手","aria-hidden":"true"}},[a._v("#")]),a._v(" 开始上手")]),a._v(" "),e("h5",{attrs:{id:"开发环境："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发环境：","aria-hidden":"true"}},[a._v("#")]),a._v(" 开发环境：")]),a._v(" "),e("ul",[e("li",[a._v("Xcode9+，当前SDK使用Xcode9编译，请使用Xcode9及以上版本进行开发；")]),a._v(" "),e("li",[a._v("iOS8，限制最低系统版本为iOS8；")])]),a._v(" "),e("h5",{attrs:{id:"导入到工程："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#导入到工程：","aria-hidden":"true"}},[a._v("#")]),a._v(" 导入到工程：")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("将开发套件的framework文件：MTModuleKit.framework拷贝到项目工程目录下，然后添加到工程中，target为当前的工程，然后点“Add”，如下图所示：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(198),alt:"添加framework"}})])])]),a._v(" "),e("p",[a._v("​    依次找到：“Target” -> General -> Embedded Binaries，点击下面的“+”，继续点击“Add Other”将MTTrackit.framework文件添加进来。同样的，也需要添加到 ”Linked Frameworks and Libraries“，添加完应该如下图：")]),a._v(" "),e("p",[e("img",{attrs:{src:s(199),alt:"frameworkadded"}})]),a._v(" "),e("ol",[e("li",[e("p",[a._v("*如果使用Swift开发，需要添加一个Objective C BridgingHeader .h文件（此处不再赘述），并且在此文件添加：import ，如果使用Objective C进行开发，在需要的文件的顶端添加：import")])]),a._v(" "),e("li",[e("p",[a._v('!!!在iOS10及以上版本，苹果对蓝牙APi添加了权限限制，你需要在工程的info.plist文件里添加一项字符串：Privacy - Bluetooth Peripheral Usage Description - "你的使用描述"。如下图所示：')]),a._v(" "),e("p",[e("img",{attrs:{src:s(200),alt:"bluetoothdescription"}})])])]),a._v(" "),e("h4",{attrs:{id:"开始开发"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开始开发","aria-hidden":"true"}},[a._v("#")]),a._v(" 开始开发")]),a._v(" "),e("h5",{attrs:{id:"扫描设备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#扫描设备","aria-hidden":"true"}},[a._v("#")]),a._v(" 扫描设备")]),a._v(" "),e("p",[a._v("首先需要获取到MTModuleManager的单例，然后检查手机当前的蓝牙状态，接着就可以进行设备扫描了。")]),a._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('// 获取Manager单例\nMTModuleManager *manager = [MTModuleManager sharedInstance];\n\n// 手机端当前的蓝牙开关状态\nif(manager.status == Poweron) {\n     // 开始进行设备扫描\n    [manager startScan:^(NSArray<MTModule *> *Modules){\n        // 当检测到周围的设备后，此block会回调。\n    }];   \n}\n\n// 如果你需要对手机的蓝牙状态作出响应。请监听回调。\n[manager didChangesBluetoothStatus:^(BluetoothStatus status){\n    \n    switch(status) {\n        case Poweron:\n            NSLog(@"bluetooth status change to poweron");\n            break;\n        case Poweroff:\n            NSLog(@"bluetooth status change to poweroff");\n            break;\n        case Unknown:\n            NSLog(@"bluetooth status change to unknown");\n    }\n}];\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br")])]),e("p",[a._v("PS: 只有手机蓝牙状态处于Poweron时，整个SDK才能够正常工作。")]),a._v(" "),e("h5",{attrs:{id:"连接到设备"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接到设备","aria-hidden":"true"}},[a._v("#")]),a._v(" 连接到设备")]),a._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('// 从上一步能够获取到扫描到的设备\nMTModule *module = modules[0];\n\n// 监听设备连接状态。\n// ！！！只有在连接状态为Connected的时候，这个设备才是可以写入数据的\n[module didChangeConnection:^(Connection con){\n    if(con == Connected) {\n        NSLog(@"设备已经建立连接");\n    }\n}];\n\n// 连接到一个模块设备\n[manager connect:module];\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br")])]),e("h5",{attrs:{id:"向设备写入数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#向设备写入数据","aria-hidden":"true"}},[a._v("#")]),a._v(" 向设备写入数据")]),a._v(" "),e("p",[a._v("接上一步，当手机成功与某个设备建立连接后，就可以对设备进行读写操作了。")]),a._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('// 对设备写入数据\n// 首先要构造你想写入的数据,这里构造了一组四个字节的数据 0x01,0x02,0x03,0x04.\nuint8_t bytes[4] = {0x01, 0x02, 0x03, 0x04};\nNSData *data = [NSData dataWithBytes:&bytes length:4];\n\n// 然后可以直接执行一下方法，将上述构造的数据写入到设备中。\n// 同时你可以在block中获取到写入是否成功的结果。\n[module writeData:data completion:^(BOOL success, NSError *error){\n    if(success) {\n        NSLog(@"write data successfully.");\n    }\n    else {\n        NSLog(@"write data failed.");\n    }\n}];\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br")])]),e("h5",{attrs:{id:"从设备接收数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#从设备接收数据","aria-hidden":"true"}},[a._v("#")]),a._v(" 从设备接收数据")]),a._v(" "),e("p",[a._v("由于手机并不知道什么时候设备会发送数据过来，所以在这里使用监听block的方式来实现数据接收。")]),a._v(" "),e("div",{staticClass:"language-objective-c line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('// 配置block等待接收数据\n[module didReceiveData:^(NSData *data){\n    NSLog(@"从设备端接收到数据：%@",data);\n}];\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("h3",{attrs:{id:"附表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#附表","aria-hidden":"true"}},[a._v("#")]),a._v(" 附表")]),a._v(" "),e("h5",{attrs:{id:"mtmodulemanager-属性说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mtmodulemanager-属性说明","aria-hidden":"true"}},[a._v("#")]),a._v(" MTModuleManager 属性说明")]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[a._v("名称")]),a._v(" "),e("th",[a._v("类型")]),a._v(" "),e("th",[a._v("备注")])])]),a._v(" "),e("tbody",[e("tr",[e("td",[a._v("status")]),a._v(" "),e("td",[a._v("BluetoothStatus")]),a._v(" "),e("td",[a._v("当前的手机蓝牙状态")])]),a._v(" "),e("tr",[e("td",[a._v("scannedModules")]),a._v(" "),e("td",[a._v("NSArray")]),a._v(" "),e("td",[a._v("扫描到的设备")])]),a._v(" "),e("tr",[e("td",[a._v("connectedModules")]),a._v(" "),e("td",[a._v("NSArray")]),a._v(" "),e("td",[a._v("当前连接中的设备")])])])]),a._v(" "),e("h5",{attrs:{id:"mtmodule"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mtmodule","aria-hidden":"true"}},[a._v("#")]),a._v(" MTModule")]),a._v(" "),e("table",[e("thead",[e("tr",[e("th",[a._v("名称")]),a._v(" "),e("th",[a._v("类型")]),a._v(" "),e("th",[a._v("备注")])])]),a._v(" "),e("tbody",[e("tr",[e("td",[a._v("name")]),a._v(" "),e("td",[a._v("NSString")]),a._v(" "),e("td",[a._v("设备的蓝牙名称")])]),a._v(" "),e("tr",[e("td",[a._v("identifier")]),a._v(" "),e("td",[a._v("NSString")]),a._v(" "),e("td",[a._v("设备的识别码*")])]),a._v(" "),e("tr",[e("td",[a._v("advertisingData")]),a._v(" "),e("td",[a._v("NSData")]),a._v(" "),e("td",[a._v("设备的广播数据")])]),a._v(" "),e("tr",[e("td",[a._v("lastUpdate")]),a._v(" "),e("td",[a._v("NSDate")]),a._v(" "),e("td",[a._v("设备最后一次被扫描到的时间戳")])]),a._v(" "),e("tr",[e("td",[a._v("connection")]),a._v(" "),e("td",[a._v("Connection")]),a._v(" "),e("td",[a._v("设备的连接状态")])]),a._v(" "),e("tr",[e("td",[a._v("rssi")]),a._v(" "),e("td",[a._v("NSInteger")]),a._v(" "),e("td",[a._v("设备的RSSI")])]),a._v(" "),e("tr",[e("td",[a._v("uuids")]),a._v(" "),e("td",[a._v("NSDictionary")]),a._v(" "),e("td",[a._v("设备的读写服务UUID")])]),a._v(" "),e("tr",[e("td",[a._v("infos")]),a._v(" "),e("td",[a._v("NSDictionary")]),a._v(" "),e("td",[a._v("设备信息**")])])])]),a._v(" "),e("p",[a._v("*：由于iOS系统限制，应用层无法获取到设备的Mac地址，所以只能以此id来代替mac地址作为识别码，需要注意的是，即使是同一个设备，每次重新扫描数据时，它的identifier都是不一样的。")]),a._v(" "),e("p",[a._v("**：仅部分设备支持获取设备信息，为空即为不支持。")])])}],n=s(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},e,!1,null,null,null);r.options.__file="iOS_MinewModuleKit_Software_Development_Kit_Guide.md";t.default=r.exports}}]);